package com.utn.loginup.controllers;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import com.utn.loginup.repositories.UsuariosRepository;
import com.utn.loginup.LoginupApplication;
import com.utn.loginup.models.Usuarios;

@RestController // This means that this class is a Controller
@RequestMapping("/user") // This means URL's start with /user (after Application path)
public class UsuariosController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UsuariosRepository usuariosRepository;

    @PostMapping(path ="/add") // Map ONLY POST Requests
    public String addNewUser(  @RequestParam String username, String email, String password) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Usuarios n = new Usuarios();


        n.setUsername(username);
        n.setEmail(email);
        n.setPassword(password);
        
        usuariosRepository.save(n);
        return "Gurdado";
    }

    /*@PostMapping("/delete/{id}") // Map ONLY POST Requests
    public @ResponseBody String deleteUserById(@PathVariable Long id) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        userRepository.deleteById(id);
        return "Deleted";
    }*/

    @GetMapping("/all")
    public @ResponseBody Iterable<Usuarios> getAllUsers() {
        // This returns a JSON or XML with the users
        return usuariosRepository.findAll();
    }

    
    @GetMapping("/prueba")
    public static String prueba(){

        return ("Holaaaaaaaaa");
    }

    

    @GetMapping("")
    public @ResponseBody String hola() {
        return "Hola marco";
    }

    @PostMapping("/registrarUsuario")
    public Usuarios guardaUsuarios(@RequestBody Usuarios usuario){
        return usuariosRepository.save(usuario);
    }
}
